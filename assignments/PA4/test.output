current feature is a

current feature is b

current feature is c
new class

current feature is init
block class {}
assign class a:Int<-Int
assign class b:Bool<-Bool
static dispatch class 0x5643d21f1800@out_string()
dispatch class  a()
check less or equal A    A

current feature is a
block class {}
check less or equal SELF_TYPE    A

current feature is test
block class {}
cond class if then else fi
eq class
block class {}
block class {}
Int   Int
cond class if then else fi Int
check less or equal Int    Int

current feature is main
block class {}
dispatch class  init()
new class
check less or equal A    A

#1
_program
  #1
  _class
    C
    A
    "./test.cl"
    (
    #2
    _attr
      a
      Int
      #2
      _int
        0
      : Int
    #3
    _attr
      b
      Bool
      #0
      _no_expr
      : _no_type
    #4
    _attr
      c
      A
      #4
      _new
        A
      : A
    #6
    _method
      init
      #6
      _formal
        x
        Int
      #6
      _formal
        y
        Bool
      A
      #7
      _block
        #8
        _assign
          a
          #8
          _object
            x
          : Int
        : Int
        #9
        _assign
          b
          #9
          _object
            y
          : Bool
        : Bool
        #10
        _static_dispatch
          #10
          _object
            c
          : A
          IO
          out_string
          (
          #10
          _string
            "123"
          : String
          )
        : A
        #11
        _dispatch
          #11
          _object
            self
          : SELF_TYPE
          a
          (
          #11
          _object
            x
          : Int
          )
        : A
      : A
    )
  #17
  _class
    A
    IO
    "./test.cl"
    (
    #19
    _method
      a
      #19
      _formal
        x
        Int
      A
      #20
      _block
        #21
        _object
          self
        : SELF_TYPE
      : SELF_TYPE
    #26
    _method
      test
      #26
      _formal
        x
        Int
      #26
      _formal
        y
        Bool
      Int
      #27
      _block
        #28
        _cond
          #28
          _eq
            #28
            _object
              y
            : Bool
            #28
            _bool
              1
            : Bool
          : Bool
          #28
          _block
            #29
            _object
              x
            : Int
          : Int
          #30
          _block
            #31
            _int
              0
            : Int
            #32
            _int
              1
            : Int
          : Int
        : Int
      : Int
    )
  #39
  _class
    Main
    Object
    "./test.cl"
    (
    #40
    _method
      main
      A
      #41
      _block
        #42
        _dispatch
          #42
          _new
            C
          : C
          init
          (
          #42
          _int
            1
          : Int
          #42
          _bool
            1
          : Bool
          )
        : A
      : A
    )
